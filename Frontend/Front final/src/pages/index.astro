---
// Página principal del sistema de autopago ACAUCAB
import AutopagoApp from "../components/AutopagoApp.tsx";
import "../styles/globals.css";
export const prerender = false;
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ACAUCAB - Sistema de Autopago</title>
    <meta
      name="description"
      content="Sistema de autopago para distribuidora de cervezas artesanales ACAUCAB"
    />

    <!-- Preload key fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <!-- Meta tags para PWA -->
    <meta name="theme-color" content="#3D4A3A" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="apple-mobile-web-app-title" content="ACAUCAB Autopago" />

    <!-- Prevenir zoom en dispositivos móviles -->
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />

    <style>
      /* Reset básico y fuentes */
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      html {
        font-family:
          "Inter",
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          Roboto,
          sans-serif;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }

      body {
        margin: 0;
        background-color: #f4efe6;
        overflow-x: hidden;
      }

      /* Estilos para pantallas táctiles */
      button,
      a,
      input,
      select,
      textarea {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        -webkit-tap-highlight-color: transparent;
      }

      /* Estilos para elementos táctiles */
      .touch-target {
        min-height: 44px;
        min-width: 44px;
      }

      /* Animaciones suaves */
      .transition-all {
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 300ms;
      }

      /* Utilidades para texto truncado */
      .line-clamp-1 {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 1;
      }

      .line-clamp-2 {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
      }

      /* Estilos para scrollbar personalizado */
      ::-webkit-scrollbar {
        width: 8px;
        height: 8px;
      }

      ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
      }

      ::-webkit-scrollbar-thumb {
        background: #a1b5a0;
        border-radius: 4px;
      }

      ::-webkit-scrollbar-thumb:hover {
        background: #8fa48e;
      }

      /* Estilos para loader/spinner */
      @keyframes spin {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }

      .animate-spin {
        animation: spin 1s linear infinite;
      }

      /* Estilos para pulso de carga */
      @keyframes pulse {
        0%,
        100% {
          opacity: 1;
        }
        50% {
          opacity: 0.5;
        }
      }

      .animate-pulse {
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
      }

      /* Estilo para elementos enfocados */
      .focus\:ring-2:focus {
        outline: 2px solid transparent;
        outline-offset: 2px;
        box-shadow: 0 0 0 2px #a1b5a0;
      }

      /* Estilos responsivos para móviles */
      @media (max-width: 768px) {
        html {
          font-size: 14px;
        }

        .container {
          padding-left: 1rem;
          padding-right: 1rem;
        }
      }

      /* Estilos para modo pantalla completa (kiosco) */
      @media (display-mode: fullscreen) {
        body {
          cursor: none;
        }

        /* Ocultar scrollbars en modo kiosco */
        ::-webkit-scrollbar {
          display: none;
        }
      }

      /* Estilos para prevenir selección de texto en modo kiosco */
      .no-select {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      /* Estilos para imágenes de productos */
      .product-image {
        object-fit: cover;
        background-color: #f8f9fa;
      }

      /* Estilos para botones con efecto hover */
      .btn-primary {
        background-color: #3d4a3a;
        transition: all 0.3s ease;
      }

      .btn-primary:hover {
        background-color: #2c3631;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(61, 74, 58, 0.3);
      }

      .btn-secondary {
        background-color: #a1b5a0;
        transition: all 0.3s ease;
      }

      .btn-secondary:hover {
        background-color: #8fa48e;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(161, 181, 160, 0.3);
      }
    </style>
  </head>

  <body class="no-select">
    <!-- Componente principal de React -->
    <AutopagoApp client:load />

    <!-- Service Worker para funcionalidad PWA (opcional) -->
    <script>
      if ("serviceWorker" in navigator) {
        window.addEventListener("load", () => {
          navigator.serviceWorker
            .register("/sw.js")
            .then((registration) => {
              console.log("SW registered: ", registration);
            })
            .catch((registrationError) => {
              console.log("SW registration failed: ", registrationError);
            });
        });
      }
    </script>

    <!-- Error boundary básico -->
    <script>
      window.addEventListener("error", (event) => {
        console.error("Error global capturado:", event.error);

        // Mostrar mensaje de error al usuario
        const errorDiv = document.createElement("div");
        errorDiv.className =
          "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50";
        errorDiv.innerHTML = `
					<div class="bg-white rounded-lg p-6 max-w-md mx-4 text-center">
						<div class="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
							<svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
							</svg>
						</div>
						<h3 class="text-lg font-semibold text-gray-900 mb-2">Error del Sistema</h3>
						<p class="text-gray-600 mb-4">Ha ocurrido un error inesperado. Por favor, reinicie la aplicación.</p>
						<button onclick="window.location.reload()" class="bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors">
							Reiniciar
						</button>
					</div>
				`;

        document.body.appendChild(errorDiv);
      });

      // Manejar errores de promesas no capturadas
      window.addEventListener("unhandledrejection", (event) => {
        console.error("Promise rejection no manejada:", event.reason);
        event.preventDefault();
      });
    </script>
  </body>
</html>
